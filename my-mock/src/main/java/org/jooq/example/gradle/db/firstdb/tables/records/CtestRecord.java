/**
 * This class is generated by jOOQ
 */
package org.jooq.example.gradle.db.firstdb.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.example.gradle.db.firstdb.tables.Ctest;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CtestRecord extends TableRecordImpl<CtestRecord> implements Record3<Integer, String, Timestamp> {

	private static final long serialVersionUID = 1977675407;

	/**
	 * Setter for <code>firstdb.ctest.i</code>.
	 */
	public void setI(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>firstdb.ctest.i</code>.
	 */
	public Integer getI() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>firstdb.ctest.s</code>.
	 */
	public void setS(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>firstdb.ctest.s</code>.
	 */
	public String getS() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>firstdb.ctest.d</code>.
	 */
	public void setD(Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>firstdb.ctest.d</code>.
	 */
	public Timestamp getD() {
		return (Timestamp) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Timestamp> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, Timestamp> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Ctest.CTEST.I;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Ctest.CTEST.S;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field3() {
		return Ctest.CTEST.D;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getI();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getS();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value3() {
		return getD();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CtestRecord value1(Integer value) {
		setI(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CtestRecord value2(String value) {
		setS(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CtestRecord value3(Timestamp value) {
		setD(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CtestRecord values(Integer value1, String value2, Timestamp value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached CtestRecord
	 */
	public CtestRecord() {
		super(Ctest.CTEST);
	}

	/**
	 * Create a detached, initialised CtestRecord
	 */
	public CtestRecord(Integer i, String s, Timestamp d) {
		super(Ctest.CTEST);

		setValue(0, i);
		setValue(1, s);
		setValue(2, d);
	}
}
