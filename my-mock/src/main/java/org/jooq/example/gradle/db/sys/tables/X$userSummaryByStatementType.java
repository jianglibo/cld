/**
 * This class is generated by jOOQ
 */
package org.jooq.example.gradle.db.sys.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.example.gradle.db.sys.Sys;
import org.jooq.example.gradle.db.sys.tables.records.X$userSummaryByStatementTypeRecord;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$userSummaryByStatementType extends TableImpl<X$userSummaryByStatementTypeRecord> {

	private static final long serialVersionUID = -1068274212;

	/**
	 * The reference instance of <code>sys.x$user_summary_by_statement_type</code>
	 */
	public static final X$userSummaryByStatementType X$USER_SUMMARY_BY_STATEMENT_TYPE = new X$userSummaryByStatementType();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<X$userSummaryByStatementTypeRecord> getRecordType() {
		return X$userSummaryByStatementTypeRecord.class;
	}

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.user</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.statement</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, String> STATEMENT = createField("statement", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.total</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> TOTAL = createField("total", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.total_latency</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> TOTAL_LATENCY = createField("total_latency", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.max_latency</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> MAX_LATENCY = createField("max_latency", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.lock_latency</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> LOCK_LATENCY = createField("lock_latency", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.rows_sent</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> ROWS_SENT = createField("rows_sent", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.rows_examined</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> ROWS_EXAMINED = createField("rows_examined", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.rows_affected</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> ROWS_AFFECTED = createField("rows_affected", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$user_summary_by_statement_type.full_scans</code>.
	 */
	public final TableField<X$userSummaryByStatementTypeRecord, ULong> FULL_SCANS = createField("full_scans", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>sys.x$user_summary_by_statement_type</code> table reference
	 */
	public X$userSummaryByStatementType() {
		this("x$user_summary_by_statement_type", null);
	}

	/**
	 * Create an aliased <code>sys.x$user_summary_by_statement_type</code> table reference
	 */
	public X$userSummaryByStatementType(String alias) {
		this(alias, X$USER_SUMMARY_BY_STATEMENT_TYPE);
	}

	private X$userSummaryByStatementType(String alias, Table<X$userSummaryByStatementTypeRecord> aliased) {
		this(alias, aliased, null);
	}

	private X$userSummaryByStatementType(String alias, Table<X$userSummaryByStatementTypeRecord> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X$userSummaryByStatementType as(String alias) {
		return new X$userSummaryByStatementType(alias, this);
	}

	/**
	 * Rename this table
	 */
	public X$userSummaryByStatementType rename(String name) {
		return new X$userSummaryByStatementType(name, null);
	}
}
