/**
 * This class is generated by jOOQ
 */
package org.jooq.example.gradle.db.sys.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.example.gradle.db.sys.Sys;
import org.jooq.example.gradle.db.sys.tables.records.MemoryGlobalTotalRecord;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemoryGlobalTotal extends TableImpl<MemoryGlobalTotalRecord> {

	private static final long serialVersionUID = 1726719686;

	/**
	 * The reference instance of <code>sys.memory_global_total</code>
	 */
	public static final MemoryGlobalTotal MEMORY_GLOBAL_TOTAL = new MemoryGlobalTotal();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MemoryGlobalTotalRecord> getRecordType() {
		return MemoryGlobalTotalRecord.class;
	}

	/**
	 * The column <code>sys.memory_global_total.total_allocated</code>.
	 */
	public final TableField<MemoryGlobalTotalRecord, String> TOTAL_ALLOCATED = createField("total_allocated", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>sys.memory_global_total</code> table reference
	 */
	public MemoryGlobalTotal() {
		this("memory_global_total", null);
	}

	/**
	 * Create an aliased <code>sys.memory_global_total</code> table reference
	 */
	public MemoryGlobalTotal(String alias) {
		this(alias, MEMORY_GLOBAL_TOTAL);
	}

	private MemoryGlobalTotal(String alias, Table<MemoryGlobalTotalRecord> aliased) {
		this(alias, aliased, null);
	}

	private MemoryGlobalTotal(String alias, Table<MemoryGlobalTotalRecord> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MemoryGlobalTotal as(String alias) {
		return new MemoryGlobalTotal(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MemoryGlobalTotal rename(String name) {
		return new MemoryGlobalTotal(name, null);
	}
}
