/**
 * This class is generated by jOOQ
 */
package org.jooq.example.gradle.db.sys.tables;


import java.math.BigDecimal;
import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.example.gradle.db.sys.Sys;
import org.jooq.example.gradle.db.sys.enums.X$sessionTrxAutocommit;
import org.jooq.example.gradle.db.sys.enums.X$sessionTrxState;
import org.jooq.example.gradle.db.sys.tables.records.X$sessionRecord;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$session extends TableImpl<X$sessionRecord> {

	private static final long serialVersionUID = -304587554;

	/**
	 * The reference instance of <code>sys.x$session</code>
	 */
	public static final X$session X$SESSION = new X$session();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<X$sessionRecord> getRecordType() {
		return X$sessionRecord.class;
	}

	/**
	 * The column <code>sys.x$session.thd_id</code>.
	 */
	public final TableField<X$sessionRecord, ULong> THD_ID = createField("thd_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>sys.x$session.conn_id</code>.
	 */
	public final TableField<X$sessionRecord, ULong> CONN_ID = createField("conn_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.user</code>.
	 */
	public final TableField<X$sessionRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>sys.x$session.db</code>.
	 */
	public final TableField<X$sessionRecord, String> DB = createField("db", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>sys.x$session.command</code>.
	 */
	public final TableField<X$sessionRecord, String> COMMAND = createField("command", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

	/**
	 * The column <code>sys.x$session.state</code>.
	 */
	public final TableField<X$sessionRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>sys.x$session.time</code>.
	 */
	public final TableField<X$sessionRecord, Long> TIME = createField("time", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>sys.x$session.current_statement</code>.
	 */
	public final TableField<X$sessionRecord, String> CURRENT_STATEMENT = createField("current_statement", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>sys.x$session.statement_latency</code>.
	 */
	public final TableField<X$sessionRecord, ULong> STATEMENT_LATENCY = createField("statement_latency", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.progress</code>.
	 */
	public final TableField<X$sessionRecord, BigDecimal> PROGRESS = createField("progress", org.jooq.impl.SQLDataType.DECIMAL.precision(26, 2), this, "");

	/**
	 * The column <code>sys.x$session.lock_latency</code>.
	 */
	public final TableField<X$sessionRecord, ULong> LOCK_LATENCY = createField("lock_latency", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.rows_examined</code>.
	 */
	public final TableField<X$sessionRecord, ULong> ROWS_EXAMINED = createField("rows_examined", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.rows_sent</code>.
	 */
	public final TableField<X$sessionRecord, ULong> ROWS_SENT = createField("rows_sent", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.rows_affected</code>.
	 */
	public final TableField<X$sessionRecord, ULong> ROWS_AFFECTED = createField("rows_affected", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.tmp_tables</code>.
	 */
	public final TableField<X$sessionRecord, ULong> TMP_TABLES = createField("tmp_tables", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.tmp_disk_tables</code>.
	 */
	public final TableField<X$sessionRecord, ULong> TMP_DISK_TABLES = createField("tmp_disk_tables", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.full_scan</code>.
	 */
	public final TableField<X$sessionRecord, String> FULL_SCAN = createField("full_scan", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>sys.x$session.last_statement</code>.
	 */
	public final TableField<X$sessionRecord, String> LAST_STATEMENT = createField("last_statement", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>sys.x$session.last_statement_latency</code>.
	 */
	public final TableField<X$sessionRecord, ULong> LAST_STATEMENT_LATENCY = createField("last_statement_latency", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.current_memory</code>.
	 */
	public final TableField<X$sessionRecord, BigInteger> CURRENT_MEMORY = createField("current_memory", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

	/**
	 * The column <code>sys.x$session.last_wait</code>.
	 */
	public final TableField<X$sessionRecord, String> LAST_WAIT = createField("last_wait", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

	/**
	 * The column <code>sys.x$session.last_wait_latency</code>.
	 */
	public final TableField<X$sessionRecord, String> LAST_WAIT_LATENCY = createField("last_wait_latency", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>sys.x$session.source</code>.
	 */
	public final TableField<X$sessionRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>sys.x$session.trx_latency</code>.
	 */
	public final TableField<X$sessionRecord, ULong> TRX_LATENCY = createField("trx_latency", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

	/**
	 * The column <code>sys.x$session.trx_state</code>.
	 */
	public final TableField<X$sessionRecord, X$sessionTrxState> TRX_STATE = createField("trx_state", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.jooq.example.gradle.db.sys.enums.X$sessionTrxState.class), this, "");

	/**
	 * The column <code>sys.x$session.trx_autocommit</code>.
	 */
	public final TableField<X$sessionRecord, X$sessionTrxAutocommit> TRX_AUTOCOMMIT = createField("trx_autocommit", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(org.jooq.example.gradle.db.sys.enums.X$sessionTrxAutocommit.class), this, "");

	/**
	 * The column <code>sys.x$session.pid</code>.
	 */
	public final TableField<X$sessionRecord, String> PID = createField("pid", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>sys.x$session.program_name</code>.
	 */
	public final TableField<X$sessionRecord, String> PROGRAM_NAME = createField("program_name", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * Create a <code>sys.x$session</code> table reference
	 */
	public X$session() {
		this("x$session", null);
	}

	/**
	 * Create an aliased <code>sys.x$session</code> table reference
	 */
	public X$session(String alias) {
		this(alias, X$SESSION);
	}

	private X$session(String alias, Table<X$sessionRecord> aliased) {
		this(alias, aliased, null);
	}

	private X$session(String alias, Table<X$sessionRecord> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X$session as(String alias) {
		return new X$session(alias, this);
	}

	/**
	 * Rename this table
	 */
	public X$session rename(String name) {
		return new X$session(name, null);
	}
}
