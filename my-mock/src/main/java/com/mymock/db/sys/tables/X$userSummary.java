/**
 * This class is generated by jOOQ
 */
package com.mymock.db.sys.tables;


import com.mymock.db.sys.Sys;
import com.mymock.db.sys.tables.records.X$userSummaryRecord;

import java.math.BigDecimal;
import java.math.BigInteger;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class X$userSummary extends TableImpl<X$userSummaryRecord> {

	private static final long serialVersionUID = 514123131;

	/**
	 * The reference instance of <code>sys.x$user_summary</code>
	 */
	public static final X$userSummary X$USER_SUMMARY = new X$userSummary();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<X$userSummaryRecord> getRecordType() {
		return X$userSummaryRecord.class;
	}

	/**
	 * The column <code>sys.x$user_summary.user</code>.
	 */
	public final TableField<X$userSummaryRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(32), this, "");

	/**
	 * The column <code>sys.x$user_summary.statements</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> STATEMENTS = createField("statements", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

	/**
	 * The column <code>sys.x$user_summary.statement_latency</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> STATEMENT_LATENCY = createField("statement_latency", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

	/**
	 * The column <code>sys.x$user_summary.statement_avg_latency</code>.
	 */
	public final TableField<X$userSummaryRecord, BigDecimal> STATEMENT_AVG_LATENCY = createField("statement_avg_latency", org.jooq.impl.SQLDataType.DECIMAL.precision(65, 4).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>sys.x$user_summary.table_scans</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> TABLE_SCANS = createField("table_scans", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(65), this, "");

	/**
	 * The column <code>sys.x$user_summary.file_ios</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> FILE_IOS = createField("file_ios", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

	/**
	 * The column <code>sys.x$user_summary.file_io_latency</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> FILE_IO_LATENCY = createField("file_io_latency", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

	/**
	 * The column <code>sys.x$user_summary.current_connections</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> CURRENT_CONNECTIONS = createField("current_connections", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

	/**
	 * The column <code>sys.x$user_summary.total_connections</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> TOTAL_CONNECTIONS = createField("total_connections", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(41), this, "");

	/**
	 * The column <code>sys.x$user_summary.unique_hosts</code>.
	 */
	public final TableField<X$userSummaryRecord, Long> UNIQUE_HOSTS = createField("unique_hosts", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>sys.x$user_summary.current_memory</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> CURRENT_MEMORY = createField("current_memory", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(63), this, "");

	/**
	 * The column <code>sys.x$user_summary.total_memory_allocated</code>.
	 */
	public final TableField<X$userSummaryRecord, BigInteger> TOTAL_MEMORY_ALLOCATED = createField("total_memory_allocated", org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(64), this, "");

	/**
	 * Create a <code>sys.x$user_summary</code> table reference
	 */
	public X$userSummary() {
		this("x$user_summary", null);
	}

	/**
	 * Create an aliased <code>sys.x$user_summary</code> table reference
	 */
	public X$userSummary(String alias) {
		this(alias, X$USER_SUMMARY);
	}

	private X$userSummary(String alias, Table<X$userSummaryRecord> aliased) {
		this(alias, aliased, null);
	}

	private X$userSummary(String alias, Table<X$userSummaryRecord> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public X$userSummary as(String alias) {
		return new X$userSummary(alias, this);
	}

	/**
	 * Rename this table
	 */
	public X$userSummary rename(String name) {
		return new X$userSummary(name, null);
	}
}
