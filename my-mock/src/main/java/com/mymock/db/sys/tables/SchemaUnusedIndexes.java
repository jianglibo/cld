/**
 * This class is generated by jOOQ
 */
package com.mymock.db.sys.tables;


import com.mymock.db.sys.Sys;
import com.mymock.db.sys.tables.records.SchemaUnusedIndexesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaUnusedIndexes extends TableImpl<SchemaUnusedIndexesRecord> {

	private static final long serialVersionUID = -1970025712;

	/**
	 * The reference instance of <code>sys.schema_unused_indexes</code>
	 */
	public static final SchemaUnusedIndexes SCHEMA_UNUSED_INDEXES = new SchemaUnusedIndexes();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SchemaUnusedIndexesRecord> getRecordType() {
		return SchemaUnusedIndexesRecord.class;
	}

	/**
	 * The column <code>sys.schema_unused_indexes.object_schema</code>.
	 */
	public final TableField<SchemaUnusedIndexesRecord, String> OBJECT_SCHEMA = createField("object_schema", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>sys.schema_unused_indexes.object_name</code>.
	 */
	public final TableField<SchemaUnusedIndexesRecord, String> OBJECT_NAME = createField("object_name", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * The column <code>sys.schema_unused_indexes.index_name</code>.
	 */
	public final TableField<SchemaUnusedIndexesRecord, String> INDEX_NAME = createField("index_name", org.jooq.impl.SQLDataType.VARCHAR.length(64), this, "");

	/**
	 * Create a <code>sys.schema_unused_indexes</code> table reference
	 */
	public SchemaUnusedIndexes() {
		this("schema_unused_indexes", null);
	}

	/**
	 * Create an aliased <code>sys.schema_unused_indexes</code> table reference
	 */
	public SchemaUnusedIndexes(String alias) {
		this(alias, SCHEMA_UNUSED_INDEXES);
	}

	private SchemaUnusedIndexes(String alias, Table<SchemaUnusedIndexesRecord> aliased) {
		this(alias, aliased, null);
	}

	private SchemaUnusedIndexes(String alias, Table<SchemaUnusedIndexesRecord> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SchemaUnusedIndexes as(String alias) {
		return new SchemaUnusedIndexes(alias, this);
	}

	/**
	 * Rename this table
	 */
	public SchemaUnusedIndexes rename(String name) {
		return new SchemaUnusedIndexes(name, null);
	}
}
