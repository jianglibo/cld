/**
 * This class is generated by jOOQ
 */
package com.mymock.db.sys.tables;


import com.mymock.db.sys.Sys;
import com.mymock.db.sys.tables.records.VersionRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * VIEW
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Version extends TableImpl<VersionRecord> {

	private static final long serialVersionUID = -1880938682;

	/**
	 * The reference instance of <code>sys.version</code>
	 */
	public static final Version VERSION = new Version();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VersionRecord> getRecordType() {
		return VersionRecord.class;
	}

	/**
	 * The column <code>sys.version.sys_version</code>.
	 */
	public final TableField<VersionRecord, String> SYS_VERSION = createField("sys_version", org.jooq.impl.SQLDataType.VARCHAR.length(5).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>sys.version.mysql_version</code>.
	 */
	public final TableField<VersionRecord, String> MYSQL_VERSION = createField("mysql_version", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>sys.version</code> table reference
	 */
	public Version() {
		this("version", null);
	}

	/**
	 * Create an aliased <code>sys.version</code> table reference
	 */
	public Version(String alias) {
		this(alias, VERSION);
	}

	private Version(String alias, Table<VersionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Version(String alias, Table<VersionRecord> aliased, Field<?>[] parameters) {
		super(alias, Sys.SYS, aliased, parameters, "VIEW");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Version as(String alias) {
		return new Version(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Version rename(String name) {
		return new Version(name, null);
	}
}
