/**
 * This class is generated by jOOQ
 */
package com.mymock.db.information_schema.tables.records;


import com.mymock.db.information_schema.tables.InnodbMetrics;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InnodbMetricsRecord extends TableRecordImpl<InnodbMetricsRecord> implements Record17<String, String, Long, Long, Long, Double, Long, Long, Long, Double, Timestamp, Timestamp, Long, Timestamp, String, String, String> {

	private static final long serialVersionUID = -405866537;

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.NAME</code>.
	 */
	public void setName(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.NAME</code>.
	 */
	public String getName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.SUBSYSTEM</code>.
	 */
	public void setSubsystem(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.SUBSYSTEM</code>.
	 */
	public String getSubsystem() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.COUNT</code>.
	 */
	public void setCount(Long value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.COUNT</code>.
	 */
	public Long getCount() {
		return (Long) getValue(2);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.MAX_COUNT</code>.
	 */
	public void setMaxCount(Long value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.MAX_COUNT</code>.
	 */
	public Long getMaxCount() {
		return (Long) getValue(3);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.MIN_COUNT</code>.
	 */
	public void setMinCount(Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.MIN_COUNT</code>.
	 */
	public Long getMinCount() {
		return (Long) getValue(4);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.AVG_COUNT</code>.
	 */
	public void setAvgCount(Double value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.AVG_COUNT</code>.
	 */
	public Double getAvgCount() {
		return (Double) getValue(5);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.COUNT_RESET</code>.
	 */
	public void setCountReset(Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.COUNT_RESET</code>.
	 */
	public Long getCountReset() {
		return (Long) getValue(6);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.MAX_COUNT_RESET</code>.
	 */
	public void setMaxCountReset(Long value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.MAX_COUNT_RESET</code>.
	 */
	public Long getMaxCountReset() {
		return (Long) getValue(7);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.MIN_COUNT_RESET</code>.
	 */
	public void setMinCountReset(Long value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.MIN_COUNT_RESET</code>.
	 */
	public Long getMinCountReset() {
		return (Long) getValue(8);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.AVG_COUNT_RESET</code>.
	 */
	public void setAvgCountReset(Double value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.AVG_COUNT_RESET</code>.
	 */
	public Double getAvgCountReset() {
		return (Double) getValue(9);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.TIME_ENABLED</code>.
	 */
	public void setTimeEnabled(Timestamp value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.TIME_ENABLED</code>.
	 */
	public Timestamp getTimeEnabled() {
		return (Timestamp) getValue(10);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.TIME_DISABLED</code>.
	 */
	public void setTimeDisabled(Timestamp value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.TIME_DISABLED</code>.
	 */
	public Timestamp getTimeDisabled() {
		return (Timestamp) getValue(11);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.TIME_ELAPSED</code>.
	 */
	public void setTimeElapsed(Long value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.TIME_ELAPSED</code>.
	 */
	public Long getTimeElapsed() {
		return (Long) getValue(12);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.TIME_RESET</code>.
	 */
	public void setTimeReset(Timestamp value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.TIME_RESET</code>.
	 */
	public Timestamp getTimeReset() {
		return (Timestamp) getValue(13);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.STATUS</code>.
	 */
	public void setStatus(String value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.STATUS</code>.
	 */
	public String getStatus() {
		return (String) getValue(14);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.TYPE</code>.
	 */
	public void setType(String value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.TYPE</code>.
	 */
	public String getType() {
		return (String) getValue(15);
	}

	/**
	 * Setter for <code>information_schema.INNODB_METRICS.COMMENT</code>.
	 */
	public void setComment(String value) {
		setValue(16, value);
	}

	/**
	 * Getter for <code>information_schema.INNODB_METRICS.COMMENT</code>.
	 */
	public String getComment() {
		return (String) getValue(16);
	}

	// -------------------------------------------------------------------------
	// Record17 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row17<String, String, Long, Long, Long, Double, Long, Long, Long, Double, Timestamp, Timestamp, Long, Timestamp, String, String, String> fieldsRow() {
		return (Row17) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row17<String, String, Long, Long, Long, Double, Long, Long, Long, Double, Timestamp, Timestamp, Long, Timestamp, String, String, String> valuesRow() {
		return (Row17) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return InnodbMetrics.INNODB_METRICS.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return InnodbMetrics.INNODB_METRICS.SUBSYSTEM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return InnodbMetrics.INNODB_METRICS.COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field4() {
		return InnodbMetrics.INNODB_METRICS.MAX_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field5() {
		return InnodbMetrics.INNODB_METRICS.MIN_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field6() {
		return InnodbMetrics.INNODB_METRICS.AVG_COUNT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field7() {
		return InnodbMetrics.INNODB_METRICS.COUNT_RESET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field8() {
		return InnodbMetrics.INNODB_METRICS.MAX_COUNT_RESET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field9() {
		return InnodbMetrics.INNODB_METRICS.MIN_COUNT_RESET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field10() {
		return InnodbMetrics.INNODB_METRICS.AVG_COUNT_RESET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field11() {
		return InnodbMetrics.INNODB_METRICS.TIME_ENABLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field12() {
		return InnodbMetrics.INNODB_METRICS.TIME_DISABLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field13() {
		return InnodbMetrics.INNODB_METRICS.TIME_ELAPSED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field14() {
		return InnodbMetrics.INNODB_METRICS.TIME_RESET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field15() {
		return InnodbMetrics.INNODB_METRICS.STATUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field16() {
		return InnodbMetrics.INNODB_METRICS.TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field17() {
		return InnodbMetrics.INNODB_METRICS.COMMENT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getSubsystem();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value4() {
		return getMaxCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value5() {
		return getMinCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value6() {
		return getAvgCount();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value7() {
		return getCountReset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value8() {
		return getMaxCountReset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value9() {
		return getMinCountReset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value10() {
		return getAvgCountReset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value11() {
		return getTimeEnabled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value12() {
		return getTimeDisabled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value13() {
		return getTimeElapsed();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value14() {
		return getTimeReset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value15() {
		return getStatus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value16() {
		return getType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value17() {
		return getComment();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value1(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value2(String value) {
		setSubsystem(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value3(Long value) {
		setCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value4(Long value) {
		setMaxCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value5(Long value) {
		setMinCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value6(Double value) {
		setAvgCount(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value7(Long value) {
		setCountReset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value8(Long value) {
		setMaxCountReset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value9(Long value) {
		setMinCountReset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value10(Double value) {
		setAvgCountReset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value11(Timestamp value) {
		setTimeEnabled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value12(Timestamp value) {
		setTimeDisabled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value13(Long value) {
		setTimeElapsed(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value14(Timestamp value) {
		setTimeReset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value15(String value) {
		setStatus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value16(String value) {
		setType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord value17(String value) {
		setComment(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InnodbMetricsRecord values(String value1, String value2, Long value3, Long value4, Long value5, Double value6, Long value7, Long value8, Long value9, Double value10, Timestamp value11, Timestamp value12, Long value13, Timestamp value14, String value15, String value16, String value17) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		value17(value17);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached InnodbMetricsRecord
	 */
	public InnodbMetricsRecord() {
		super(InnodbMetrics.INNODB_METRICS);
	}

	/**
	 * Create a detached, initialised InnodbMetricsRecord
	 */
	public InnodbMetricsRecord(String name, String subsystem, Long count, Long maxCount, Long minCount, Double avgCount, Long countReset, Long maxCountReset, Long minCountReset, Double avgCountReset, Timestamp timeEnabled, Timestamp timeDisabled, Long timeElapsed, Timestamp timeReset, String status, String type, String comment) {
		super(InnodbMetrics.INNODB_METRICS);

		setValue(0, name);
		setValue(1, subsystem);
		setValue(2, count);
		setValue(3, maxCount);
		setValue(4, minCount);
		setValue(5, avgCount);
		setValue(6, countReset);
		setValue(7, maxCountReset);
		setValue(8, minCountReset);
		setValue(9, avgCountReset);
		setValue(10, timeEnabled);
		setValue(11, timeDisabled);
		setValue(12, timeElapsed);
		setValue(13, timeReset);
		setValue(14, status);
		setValue(15, type);
		setValue(16, comment);
	}
}
