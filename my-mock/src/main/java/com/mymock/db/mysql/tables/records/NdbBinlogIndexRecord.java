/**
 * This class is generated by jOOQ
 */
package com.mymock.db.mysql.tables.records;


import com.mymock.db.mysql.tables.NdbBinlogIndex;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Record3;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NdbBinlogIndexRecord extends UpdatableRecordImpl<NdbBinlogIndexRecord> implements Record12<ULong, String, ULong, UInteger, UInteger, UInteger, UInteger, UInteger, ULong, UInteger, ULong, String> {

	private static final long serialVersionUID = 2130161953;

	/**
	 * Setter for <code>mysql.ndb_binlog_index.Position</code>.
	 */
	public void setPosition(ULong value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.Position</code>.
	 */
	public ULong getPosition() {
		return (ULong) getValue(0);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.File</code>.
	 */
	public void setFile(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.File</code>.
	 */
	public String getFile() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.epoch</code>.
	 */
	public void setEpoch(ULong value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.epoch</code>.
	 */
	public ULong getEpoch() {
		return (ULong) getValue(2);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.inserts</code>.
	 */
	public void setInserts(UInteger value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.inserts</code>.
	 */
	public UInteger getInserts() {
		return (UInteger) getValue(3);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.updates</code>.
	 */
	public void setUpdates(UInteger value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.updates</code>.
	 */
	public UInteger getUpdates() {
		return (UInteger) getValue(4);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.deletes</code>.
	 */
	public void setDeletes(UInteger value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.deletes</code>.
	 */
	public UInteger getDeletes() {
		return (UInteger) getValue(5);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.schemaops</code>.
	 */
	public void setSchemaops(UInteger value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.schemaops</code>.
	 */
	public UInteger getSchemaops() {
		return (UInteger) getValue(6);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.orig_server_id</code>.
	 */
	public void setOrigServerId(UInteger value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.orig_server_id</code>.
	 */
	public UInteger getOrigServerId() {
		return (UInteger) getValue(7);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.orig_epoch</code>.
	 */
	public void setOrigEpoch(ULong value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.orig_epoch</code>.
	 */
	public ULong getOrigEpoch() {
		return (ULong) getValue(8);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.gci</code>.
	 */
	public void setGci(UInteger value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.gci</code>.
	 */
	public UInteger getGci() {
		return (UInteger) getValue(9);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.next_position</code>.
	 */
	public void setNextPosition(ULong value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.next_position</code>.
	 */
	public ULong getNextPosition() {
		return (ULong) getValue(10);
	}

	/**
	 * Setter for <code>mysql.ndb_binlog_index.next_file</code>.
	 */
	public void setNextFile(String value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>mysql.ndb_binlog_index.next_file</code>.
	 */
	public String getNextFile() {
		return (String) getValue(11);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record3<ULong, UInteger, ULong> key() {
		return (Record3) super.key();
	}

	// -------------------------------------------------------------------------
	// Record12 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<ULong, String, ULong, UInteger, UInteger, UInteger, UInteger, UInteger, ULong, UInteger, ULong, String> fieldsRow() {
		return (Row12) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row12<ULong, String, ULong, UInteger, UInteger, UInteger, UInteger, UInteger, ULong, UInteger, ULong, String> valuesRow() {
		return (Row12) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field1() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.POSITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.FILE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field3() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.EPOCH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field4() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.INSERTS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field5() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.UPDATES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field6() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.DELETES;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field7() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.SCHEMAOPS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field8() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.ORIG_SERVER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field9() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.ORIG_EPOCH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UInteger> field10() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.GCI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<ULong> field11() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.NEXT_POSITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field12() {
		return NdbBinlogIndex.NDB_BINLOG_INDEX.NEXT_FILE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value1() {
		return getPosition();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFile();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value3() {
		return getEpoch();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value4() {
		return getInserts();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value5() {
		return getUpdates();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value6() {
		return getDeletes();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value7() {
		return getSchemaops();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value8() {
		return getOrigServerId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value9() {
		return getOrigEpoch();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UInteger value10() {
		return getGci();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ULong value11() {
		return getNextPosition();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value12() {
		return getNextFile();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value1(ULong value) {
		setPosition(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value2(String value) {
		setFile(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value3(ULong value) {
		setEpoch(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value4(UInteger value) {
		setInserts(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value5(UInteger value) {
		setUpdates(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value6(UInteger value) {
		setDeletes(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value7(UInteger value) {
		setSchemaops(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value8(UInteger value) {
		setOrigServerId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value9(ULong value) {
		setOrigEpoch(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value10(UInteger value) {
		setGci(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value11(ULong value) {
		setNextPosition(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord value12(String value) {
		setNextFile(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public NdbBinlogIndexRecord values(ULong value1, String value2, ULong value3, UInteger value4, UInteger value5, UInteger value6, UInteger value7, UInteger value8, ULong value9, UInteger value10, ULong value11, String value12) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached NdbBinlogIndexRecord
	 */
	public NdbBinlogIndexRecord() {
		super(NdbBinlogIndex.NDB_BINLOG_INDEX);
	}

	/**
	 * Create a detached, initialised NdbBinlogIndexRecord
	 */
	public NdbBinlogIndexRecord(ULong position, String file, ULong epoch, UInteger inserts, UInteger updates, UInteger deletes, UInteger schemaops, UInteger origServerId, ULong origEpoch, UInteger gci, ULong nextPosition, String nextFile) {
		super(NdbBinlogIndex.NDB_BINLOG_INDEX);

		setValue(0, position);
		setValue(1, file);
		setValue(2, epoch);
		setValue(3, inserts);
		setValue(4, updates);
		setValue(5, deletes);
		setValue(6, schemaops);
		setValue(7, origServerId);
		setValue(8, origEpoch);
		setValue(9, gci);
		setValue(10, nextPosition);
		setValue(11, nextFile);
	}
}
