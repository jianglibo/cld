/**
 * This class is generated by jOOQ
 */
package com.mymock.db.mysql.tables;


import com.mymock.db.mysql.Keys;
import com.mymock.db.mysql.Mysql;
import com.mymock.db.mysql.enums.UserAccountLocked;
import com.mymock.db.mysql.enums.UserAlterPriv;
import com.mymock.db.mysql.enums.UserAlterRoutinePriv;
import com.mymock.db.mysql.enums.UserCreatePriv;
import com.mymock.db.mysql.enums.UserCreateRoutinePriv;
import com.mymock.db.mysql.enums.UserCreateTablespacePriv;
import com.mymock.db.mysql.enums.UserCreateTmpTablePriv;
import com.mymock.db.mysql.enums.UserCreateUserPriv;
import com.mymock.db.mysql.enums.UserCreateViewPriv;
import com.mymock.db.mysql.enums.UserDeletePriv;
import com.mymock.db.mysql.enums.UserDropPriv;
import com.mymock.db.mysql.enums.UserEventPriv;
import com.mymock.db.mysql.enums.UserExecutePriv;
import com.mymock.db.mysql.enums.UserFilePriv;
import com.mymock.db.mysql.enums.UserGrantPriv;
import com.mymock.db.mysql.enums.UserIndexPriv;
import com.mymock.db.mysql.enums.UserInsertPriv;
import com.mymock.db.mysql.enums.UserLockTablesPriv;
import com.mymock.db.mysql.enums.UserPasswordExpired;
import com.mymock.db.mysql.enums.UserProcessPriv;
import com.mymock.db.mysql.enums.UserReferencesPriv;
import com.mymock.db.mysql.enums.UserReloadPriv;
import com.mymock.db.mysql.enums.UserReplClientPriv;
import com.mymock.db.mysql.enums.UserReplSlavePriv;
import com.mymock.db.mysql.enums.UserSelectPriv;
import com.mymock.db.mysql.enums.UserShowDbPriv;
import com.mymock.db.mysql.enums.UserShowViewPriv;
import com.mymock.db.mysql.enums.UserShutdownPriv;
import com.mymock.db.mysql.enums.UserSslType;
import com.mymock.db.mysql.enums.UserSuperPriv;
import com.mymock.db.mysql.enums.UserTriggerPriv;
import com.mymock.db.mysql.enums.UserUpdatePriv;
import com.mymock.db.mysql.tables.records.UserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * Users and global privileges
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends TableImpl<UserRecord> {

	private static final long serialVersionUID = 1681048374;

	/**
	 * The reference instance of <code>mysql.user</code>
	 */
	public static final User USER = new User();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserRecord> getRecordType() {
		return UserRecord.class;
	}

	/**
	 * The column <code>mysql.user.Host</code>.
	 */
	public final TableField<UserRecord, String> HOST = createField("Host", org.jooq.impl.SQLDataType.CHAR.length(60).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.user.User</code>.
	 */
	public final TableField<UserRecord, String> USER_ = createField("User", org.jooq.impl.SQLDataType.CHAR.length(32).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.user.Select_priv</code>.
	 */
	public final TableField<UserRecord, UserSelectPriv> SELECT_PRIV = createField("Select_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserSelectPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Insert_priv</code>.
	 */
	public final TableField<UserRecord, UserInsertPriv> INSERT_PRIV = createField("Insert_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserInsertPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Update_priv</code>.
	 */
	public final TableField<UserRecord, UserUpdatePriv> UPDATE_PRIV = createField("Update_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserUpdatePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Delete_priv</code>.
	 */
	public final TableField<UserRecord, UserDeletePriv> DELETE_PRIV = createField("Delete_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserDeletePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Create_priv</code>.
	 */
	public final TableField<UserRecord, UserCreatePriv> CREATE_PRIV = createField("Create_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserCreatePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Drop_priv</code>.
	 */
	public final TableField<UserRecord, UserDropPriv> DROP_PRIV = createField("Drop_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserDropPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Reload_priv</code>.
	 */
	public final TableField<UserRecord, UserReloadPriv> RELOAD_PRIV = createField("Reload_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserReloadPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Shutdown_priv</code>.
	 */
	public final TableField<UserRecord, UserShutdownPriv> SHUTDOWN_PRIV = createField("Shutdown_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserShutdownPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Process_priv</code>.
	 */
	public final TableField<UserRecord, UserProcessPriv> PROCESS_PRIV = createField("Process_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserProcessPriv.class), this, "");

	/**
	 * The column <code>mysql.user.File_priv</code>.
	 */
	public final TableField<UserRecord, UserFilePriv> FILE_PRIV = createField("File_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserFilePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Grant_priv</code>.
	 */
	public final TableField<UserRecord, UserGrantPriv> GRANT_PRIV = createField("Grant_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserGrantPriv.class), this, "");

	/**
	 * The column <code>mysql.user.References_priv</code>.
	 */
	public final TableField<UserRecord, UserReferencesPriv> REFERENCES_PRIV = createField("References_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserReferencesPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Index_priv</code>.
	 */
	public final TableField<UserRecord, UserIndexPriv> INDEX_PRIV = createField("Index_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserIndexPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Alter_priv</code>.
	 */
	public final TableField<UserRecord, UserAlterPriv> ALTER_PRIV = createField("Alter_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserAlterPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Show_db_priv</code>.
	 */
	public final TableField<UserRecord, UserShowDbPriv> SHOW_DB_PRIV = createField("Show_db_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserShowDbPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Super_priv</code>.
	 */
	public final TableField<UserRecord, UserSuperPriv> SUPER_PRIV = createField("Super_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserSuperPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Create_tmp_table_priv</code>.
	 */
	public final TableField<UserRecord, UserCreateTmpTablePriv> CREATE_TMP_TABLE_PRIV = createField("Create_tmp_table_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserCreateTmpTablePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Lock_tables_priv</code>.
	 */
	public final TableField<UserRecord, UserLockTablesPriv> LOCK_TABLES_PRIV = createField("Lock_tables_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserLockTablesPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Execute_priv</code>.
	 */
	public final TableField<UserRecord, UserExecutePriv> EXECUTE_PRIV = createField("Execute_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserExecutePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Repl_slave_priv</code>.
	 */
	public final TableField<UserRecord, UserReplSlavePriv> REPL_SLAVE_PRIV = createField("Repl_slave_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserReplSlavePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Repl_client_priv</code>.
	 */
	public final TableField<UserRecord, UserReplClientPriv> REPL_CLIENT_PRIV = createField("Repl_client_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserReplClientPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Create_view_priv</code>.
	 */
	public final TableField<UserRecord, UserCreateViewPriv> CREATE_VIEW_PRIV = createField("Create_view_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserCreateViewPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Show_view_priv</code>.
	 */
	public final TableField<UserRecord, UserShowViewPriv> SHOW_VIEW_PRIV = createField("Show_view_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserShowViewPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Create_routine_priv</code>.
	 */
	public final TableField<UserRecord, UserCreateRoutinePriv> CREATE_ROUTINE_PRIV = createField("Create_routine_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserCreateRoutinePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Alter_routine_priv</code>.
	 */
	public final TableField<UserRecord, UserAlterRoutinePriv> ALTER_ROUTINE_PRIV = createField("Alter_routine_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserAlterRoutinePriv.class), this, "");

	/**
	 * The column <code>mysql.user.Create_user_priv</code>.
	 */
	public final TableField<UserRecord, UserCreateUserPriv> CREATE_USER_PRIV = createField("Create_user_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserCreateUserPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Event_priv</code>.
	 */
	public final TableField<UserRecord, UserEventPriv> EVENT_PRIV = createField("Event_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserEventPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Trigger_priv</code>.
	 */
	public final TableField<UserRecord, UserTriggerPriv> TRIGGER_PRIV = createField("Trigger_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserTriggerPriv.class), this, "");

	/**
	 * The column <code>mysql.user.Create_tablespace_priv</code>.
	 */
	public final TableField<UserRecord, UserCreateTablespacePriv> CREATE_TABLESPACE_PRIV = createField("Create_tablespace_priv", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserCreateTablespacePriv.class), this, "");

	/**
	 * The column <code>mysql.user.ssl_type</code>.
	 */
	public final TableField<UserRecord, UserSslType> SSL_TYPE = createField("ssl_type", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserSslType.class), this, "");

	/**
	 * The column <code>mysql.user.ssl_cipher</code>.
	 */
	public final TableField<UserRecord, byte[]> SSL_CIPHER = createField("ssl_cipher", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * The column <code>mysql.user.x509_issuer</code>.
	 */
	public final TableField<UserRecord, byte[]> X509_ISSUER = createField("x509_issuer", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * The column <code>mysql.user.x509_subject</code>.
	 */
	public final TableField<UserRecord, byte[]> X509_SUBJECT = createField("x509_subject", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * The column <code>mysql.user.max_questions</code>.
	 */
	public final TableField<UserRecord, UInteger> MAX_QUESTIONS = createField("max_questions", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.user.max_updates</code>.
	 */
	public final TableField<UserRecord, UInteger> MAX_UPDATES = createField("max_updates", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.user.max_connections</code>.
	 */
	public final TableField<UserRecord, UInteger> MAX_CONNECTIONS = createField("max_connections", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.user.max_user_connections</code>.
	 */
	public final TableField<UserRecord, UInteger> MAX_USER_CONNECTIONS = createField("max_user_connections", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.user.plugin</code>.
	 */
	public final TableField<UserRecord, String> PLUGIN = createField("plugin", org.jooq.impl.SQLDataType.CHAR.length(64).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mysql.user.authentication_string</code>.
	 */
	public final TableField<UserRecord, String> AUTHENTICATION_STRING = createField("authentication_string", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>mysql.user.password_expired</code>.
	 */
	public final TableField<UserRecord, UserPasswordExpired> PASSWORD_EXPIRED = createField("password_expired", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserPasswordExpired.class), this, "");

	/**
	 * The column <code>mysql.user.password_last_changed</code>.
	 */
	public final TableField<UserRecord, Timestamp> PASSWORD_LAST_CHANGED = createField("password_last_changed", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>mysql.user.password_lifetime</code>.
	 */
	public final TableField<UserRecord, UShort> PASSWORD_LIFETIME = createField("password_lifetime", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED, this, "");

	/**
	 * The column <code>mysql.user.account_locked</code>.
	 */
	public final TableField<UserRecord, UserAccountLocked> ACCOUNT_LOCKED = createField("account_locked", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.mymock.db.mysql.enums.UserAccountLocked.class), this, "");

	/**
	 * Create a <code>mysql.user</code> table reference
	 */
	public User() {
		this("user", null);
	}

	/**
	 * Create an aliased <code>mysql.user</code> table reference
	 */
	public User(String alias) {
		this(alias, USER);
	}

	private User(String alias, Table<UserRecord> aliased) {
		this(alias, aliased, null);
	}

	private User(String alias, Table<UserRecord> aliased, Field<?>[] parameters) {
		super(alias, Mysql.MYSQL, aliased, parameters, "Users and global privileges");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserRecord> getPrimaryKey() {
		return Keys.KEY_USER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserRecord>> getKeys() {
		return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public User as(String alias) {
		return new User(alias, this);
	}

	/**
	 * Rename this table
	 */
	public User rename(String name) {
		return new User(name, null);
	}
}
