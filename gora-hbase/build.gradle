import java.nio.file.Paths;
import org.apache.tools.ant.filters.FixCrLfFilter
import org.apache.tools.ant.taskdefs.FixCRLF
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: "io.spring.dependency-management"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://repo.spring.io/libs-release-local' }
    maven {url 'http://repo.spring.io/libs-snapshot-local'}
    maven {url 'http://repo.spring.io/libs-milestone-local'}
}

dependencyManagement {
    imports { //
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${scsp}" //
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

bootRun { systemProperties System.properties }

jar {
    baseName = 'gora-hbase'
    version = "${bversion}"
}

test {
    filter { //
        includeTestsMatching "*Test*" //
    }
}

ext {
    remoteBase = '/root/boot-application';
}

remotes {
    rmt {
        host = System.properties.host
        user = 'root'
        knownHosts = allowAnyHosts
        identity = file(identityFile)
    }
}

task deploy << {
    String host = System.properties.host
    String profile = System.properties.profile

    if (!profile) {
        println "please add -Dprofile=prod like."
        System.exit(0)
    }

    if (!host) {
        println "please add -Dhost=xxxx"
        System.exit(0)
    }

    String pn = projectDir.toPath().getFileName();

    def remoteDir = remoteBase + "/" + pn

    remotes.rmt.setProperty('host', host)
    ssh.run {
        session(remotes.rmt) {
            execute "rm -rvf ${remoteDir}  >/dev/null; mkdir -p ${remoteDir}"
            put from: "${projectDir}/deployer", into: "$remoteDir"
            put from: "${projectDir}/build/libs/${jar.baseName}-${jar.version}.jar", into: remoteDir
            def cmdStr = "tclsh ${remoteDir}/deployer/run-on-server.tcl --profile=$profile deploy"
            println "staring remote execute: $cmdStr"
            execute cmdStr
        }
    }
}
