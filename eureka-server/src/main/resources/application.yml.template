# 本身也是一个client，和peer沟通。standalone default.
server:
  port: 8761
# this is eureka server port.
    
eureka:
  instance:
    registerWithEureka: true
    fetchRegistry: true
    nonSecurePort: ${server.port:8761}
    preferIpAddress: true
    
 # client:
 #   serviceUrl:
 #     defaultZone: ${EUREKA_SERVICE_URL:http://192.168.33.51:8761}/eureka/

---
spring:
  profiles: cloud
eureka:
  password: password
  instance:
    hostname: ${vcap.application.uris[0]}
    nonSecurePort: 80
  client:
    serviceUrl:
      defaultZone: ${vcap.services.${PREFIX:}eureka.credentials.uri:http://user:${eureka.password:}@${PREFIX:}eureka.${application.domain:cfapps.io}}/eureka/

---
spring:
  profiles: lattice
  cloud:
    config:
      server:
        overrides:
          eureka:
            client:
              serviceUrl:
                defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761}/eureka/
            instance:
              hostname: $\{CF_INSTANCE_IP:localhost}
              nonSecurePort: $\{CF_INSTANCE_PORT:$\{PORT:$\{server.port:8080}}}      
eureka:
  instance:
    hostname: ${CF_INSTANCE_IP:localhost}
    nonSecurePort: ${CF_INSTANCE_PORT:${PORT:${server.port:8888}}}
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761}/eureka/
          
---
spring:
  profiles: dev51
  application:
    name: eureka-server51
server:
  port: 8761
eureka:
  instance:
    registerWithEureka: true
    fetchRegistry: true
    hostname: 192.168.33.51
    nonSecurePort: ${server.port:8761}
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://192.168.33.52:8761/eureka/
---
spring:
  profiles: dev52
  application:
    name: eureka-server52
server:
  port: 8761
eureka:
  instance:
    registerWithEureka: true
    fetchRegistry: true
    hostname: 192.168.33.52
    nonSecurePort: ${CF_INSTANCE_PORT:${PORT:${server.port:8761}}}
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://192.138.33.51:8761/eureka/