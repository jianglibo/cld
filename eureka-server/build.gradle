
apply plugin: "io.spring.dependency-management"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'http://repo.spring.io/libs-release-local' }
    maven {url 'http://repo.spring.io/libs-snapshot-local'}
    maven {url 'http://repo.spring.io/libs-milestone-local'}
}

dependencyManagement { imports { mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${scsp}" } }

dependencies {
    compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

bootRun { systemProperties System.properties }

jar {
    baseName = 'eureka-server'
    version = "${bversion}"
}

test {
    filter {
        includeTestsMatching "*Test*"
    }
}

remotes {
  fhyun71 {
    host = '10.74.111.71'
    user = 'root'
    knownHosts = allowAnyHosts
    identity = file(identityFile)
  }
}



def runSsh(remo, svr)  {
    def foldname = 'eureka-server'
    def pathname = "/opt/${foldname}"
    def jarname = 'eureka-server-0.0.1-SNAPSHOT.jar'
    
    ssh.run {
        session(remo) {
            def result = execute "ls /opt"
            if (!result.contains(foldname)) {
                execute "mkdir -p ${pathname}"
                put from: "run.sh", into: pathname
                execute "cd ${pathname}; sed -i 's/\r\$//' run.sh"
                execute "chmod a+x ${pathname}/run.sh"
            }
            
            put from: "build/libs/${jarname}", into: pathname
            println "..........." + svr
            executeBackground "cd ${pathname}; ./run.sh restart ${svr}"
        }
    }
}


task deployserver1(dependsOn: build) << {
    runSsh(remotes.fhyun71, 'server1')
}